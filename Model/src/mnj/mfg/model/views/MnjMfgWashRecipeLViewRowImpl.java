package mnj.mfg.model.views;

import mnj.mfg.model.entities.MnjMfgWashRecipeLImpl;

import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Oct 11 21:47:18 PKT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgWashRecipeLViewRowImpl extends ViewRowImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineId {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        MinorOperations {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getMinorOperations();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setMinorOperations((String)value);
            }
        }
        ,
        MajorOperations {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getMajorOperations();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setMajorOperations((String)value);
            }
        }
        ,
        MajorOpId {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getMajorOpId();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setMajorOpId((Number)value);
            }
        }
        ,
        Smv {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getSmv();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setSmv((Number)value);
            }
        }
        ,
        Temperature {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getTemperature();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setTemperature((String)value);
            }
        }
        ,
        Water {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getWater();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setWater((String)value);
            }
        }
        ,
        MinTime {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getMinTime();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setMinTime((Number)value);
            }
        }
        ,
        Seq {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getSeq();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setSeq((Number)value);
            }
        }
        ,
        Intensity {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getIntensity();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setIntensity((String)value);
            }
        }
        ,
        WashType {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getWashType();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setWashType((String)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        NumberBatches {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getNumberBatches();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setNumberBatches((Number)value);
            }
        }
        ,
        PerBatchQuantity {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getPerBatchQuantity();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setPerBatchQuantity((Number)value);
            }
        }
        ,
        Comments {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getComments();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setComments((String)value);
            }
        }
        ,
        MnjMfgWashRecipeDView {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getMnjMfgWashRecipeDView();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MnjMfgSubProcessVO {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getMnjMfgSubProcessVO();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        WashTypeVO1 {
            public Object get(MnjMfgWashRecipeLViewRowImpl obj) {
                return obj.getWashTypeVO1();
            }

            public void put(MnjMfgWashRecipeLViewRowImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgWashRecipeLViewRowImpl object);

        public abstract void put(MnjMfgWashRecipeLViewRowImpl object,
                                 Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int MINOROPERATIONS = AttributesEnum.MinorOperations.index();
    public static final int MAJOROPERATIONS = AttributesEnum.MajorOperations.index();
    public static final int MAJOROPID = AttributesEnum.MajorOpId.index();
    public static final int SMV = AttributesEnum.Smv.index();
    public static final int TEMPERATURE = AttributesEnum.Temperature.index();
    public static final int WATER = AttributesEnum.Water.index();
    public static final int MINTIME = AttributesEnum.MinTime.index();
    public static final int SEQ = AttributesEnum.Seq.index();
    public static final int INTENSITY = AttributesEnum.Intensity.index();
    public static final int WASHTYPE = AttributesEnum.WashType.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int NUMBERBATCHES = AttributesEnum.NumberBatches.index();
    public static final int PERBATCHQUANTITY = AttributesEnum.PerBatchQuantity.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int MNJMFGWASHRECIPEDVIEW = AttributesEnum.MnjMfgWashRecipeDView.index();
    public static final int MNJMFGSUBPROCESSVO = AttributesEnum.MnjMfgSubProcessVO.index();
    public static final int WASHTYPEVO1 = AttributesEnum.WashTypeVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgWashRecipeLViewRowImpl() {
    }

    /**
     * Gets MnjMfgWashRecipeL entity object.
     * @return the MnjMfgWashRecipeL
     */
    public MnjMfgWashRecipeLImpl getMnjMfgWashRecipeL() {
        return (MnjMfgWashRecipeLImpl)getEntity(0);
    }

    /**
     * Gets the attribute value for LINE_ID using the alias name LineId.
     * @return the LINE_ID
     */
    public Number getLineId() {
        return (Number) getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as attribute value for LINE_ID using the alias name LineId.
     * @param value value to set the LINE_ID
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for HEADER_ID using the alias name HeaderId.
     * @return the HEADER_ID
     */
    public Number getHeaderId() {
        return (Number) getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as attribute value for HEADER_ID using the alias name HeaderId.
     * @param value value to set the HEADER_ID
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for MINOR_OPERATIONS using the alias name MinorOperations.
     * @return the MINOR_OPERATIONS
     */
    public String getMinorOperations() {
        return (String) getAttributeInternal(MINOROPERATIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for MINOR_OPERATIONS using the alias name MinorOperations.
     * @param value value to set the MINOR_OPERATIONS
     */
    public void setMinorOperations(String value) {
        setAttributeInternal(MINOROPERATIONS, value);
    }

    /**
     * Gets the attribute value for MAJOR_OPERATIONS using the alias name MajorOperations.
     * @return the MAJOR_OPERATIONS
     */
    public String getMajorOperations() {
        return (String) getAttributeInternal(MAJOROPERATIONS);
    }

    /**
     * Sets <code>value</code> as attribute value for MAJOR_OPERATIONS using the alias name MajorOperations.
     * @param value value to set the MAJOR_OPERATIONS
     */
    public void setMajorOperations(String value) {
        setAttributeInternal(MAJOROPERATIONS, value);
    }

    /**
     * Gets the attribute value for MAJOR_OP_ID using the alias name MajorOpId.
     * @return the MAJOR_OP_ID
     */
    public Number getMajorOpId() {
        return (Number) getAttributeInternal(MAJOROPID);
    }

    /**
     * Sets <code>value</code> as attribute value for MAJOR_OP_ID using the alias name MajorOpId.
     * @param value value to set the MAJOR_OP_ID
     */
    public void setMajorOpId(Number value) {
        setAttributeInternal(MAJOROPID, value);
    }

    /**
     * Gets the attribute value for SMV using the alias name Smv.
     * @return the SMV
     */
    public Number getSmv() {
        return (Number) getAttributeInternal(SMV);
    }

    /**
     * Sets <code>value</code> as attribute value for SMV using the alias name Smv.
     * @param value value to set the SMV
     */
    public void setSmv(Number value) {
        setAttributeInternal(SMV, value);
    }

    /**
     * Gets the attribute value for TEMPERATURE using the alias name Temperature.
     * @return the TEMPERATURE
     */
    public String getTemperature() {
        return (String) getAttributeInternal(TEMPERATURE);
    }

    /**
     * Sets <code>value</code> as attribute value for TEMPERATURE using the alias name Temperature.
     * @param value value to set the TEMPERATURE
     */
    public void setTemperature(String value) {
        setAttributeInternal(TEMPERATURE, value);
    }

    /**
     * Gets the attribute value for WATER using the alias name Water.
     * @return the WATER
     */
    public String getWater() {
        return (String) getAttributeInternal(WATER);
    }

    /**
     * Sets <code>value</code> as attribute value for WATER using the alias name Water.
     * @param value value to set the WATER
     */
    public void setWater(String value) {
        setAttributeInternal(WATER, value);
    }

    /**
     * Gets the attribute value for MIN_TIME using the alias name MinTime.
     * @return the MIN_TIME
     */
    public Number getMinTime() {
        return (Number) getAttributeInternal(MINTIME);
    }

    /**
     * Sets <code>value</code> as attribute value for MIN_TIME using the alias name MinTime.
     * @param value value to set the MIN_TIME
     */
    public void setMinTime(Number value) {
        setAttributeInternal(MINTIME, value);
    }

    /**
     * Gets the attribute value for SEQ using the alias name Seq.
     * @return the SEQ
     */
    public Number getSeq() {
        return (Number) getAttributeInternal(SEQ);
    }

    /**
     * Sets <code>value</code> as attribute value for SEQ using the alias name Seq.
     * @param value value to set the SEQ
     */
    public void setSeq(Number value) {
        setAttributeInternal(SEQ, value);
    }

    /**
     * Gets the attribute value for INTENSITY using the alias name Intensity.
     * @return the INTENSITY
     */
    public String getIntensity() {
        return (String) getAttributeInternal(INTENSITY);
    }

    /**
     * Sets <code>value</code> as attribute value for INTENSITY using the alias name Intensity.
     * @param value value to set the INTENSITY
     */
    public void setIntensity(String value) {
        setAttributeInternal(INTENSITY, value);
    }

    /**
     * Gets the attribute value for WASH_TYPE using the alias name WashType.
     * @return the WASH_TYPE
     */
    public String getWashType() {
        return (String) getAttributeInternal(WASHTYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for WASH_TYPE using the alias name WashType.
     * @param value value to set the WASH_TYPE
     */
    public void setWashType(String value) {
        setAttributeInternal(WASHTYPE, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String) getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Remarks.
     * @param value value to set the  Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for the calculated attribute NumberBatches.
     * @return the NumberBatches
     */
    public Number getNumberBatches() {
        return (Number) getAttributeInternal(NUMBERBATCHES);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute NumberBatches.
     * @param value value to set the  NumberBatches
     */
    public void setNumberBatches(Number value) {
        setAttributeInternal(NUMBERBATCHES, value);
    }

    /**
     * Gets the attribute value for the calculated attribute PerBatchQuantity.
     * @return the PerBatchQuantity
     */
    public Number getPerBatchQuantity() {
        return (Number) getAttributeInternal(PERBATCHQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute PerBatchQuantity.
     * @param value value to set the  PerBatchQuantity
     */
    public void setPerBatchQuantity(Number value) {
        setAttributeInternal(PERBATCHQUANTITY, value);
    }

    /**
     * Gets the attribute value for the calculated attribute Comments.
     * @return the Comments
     */
    public String getComments() {
        return (String) getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for the calculated attribute Comments.
     * @param value value to set the  Comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnjMfgWashRecipeDView.
     */
    public RowIterator getMnjMfgWashRecipeDView() {
        return (RowIterator)getAttributeInternal(MNJMFGWASHRECIPEDVIEW);
    }

    /**
     * Gets the associated <code>RowIterator</code> using master-detail link MnjMfgSubProcessVO.
     */
    public RowIterator getMnjMfgSubProcessVO() {
        return (RowIterator)getAttributeInternal(MNJMFGSUBPROCESSVO);
    }

    /**
     * Gets the view accessor <code>RowSet</code> WashTypeVO1.
     */
    public RowSet getWashTypeVO1() {
        return (RowSet)getAttributeInternal(WASHTYPEVO1);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }
}
