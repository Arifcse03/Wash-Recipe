package mnj.mfg.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 13 19:06:10 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgWashRecipeDImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        DetailId {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getDetailId();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setDetailId((Number)value);
            }
        }
        ,
        LineId {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        InventoryItemId {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getInventoryItemId();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setInventoryItemId((Number)value);
            }
        }
        ,
        Uom {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getUom();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setUom((String)value);
            }
        }
        ,
        PerBatchQty {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getPerBatchQty();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setPerBatchQty((Number)value);
            }
        }
        ,
        PerBatchCons {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getPerBatchCons();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setPerBatchCons((Number)value);
            }
        }
        ,
        Dosage {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getDosage();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setDosage((String)value);
            }
        }
        ,
        DosagePerc {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getDosagePerc();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setDosagePerc((Number)value);
            }
        }
        ,
        PhValue {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getPhValue();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setPhValue((String)value);
            }
        }
        ,
        WaterRatio {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getWaterRatio();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setWaterRatio((String)value);
            }
        }
        ,
        PcsPerItem {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getPcsPerItem();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setPcsPerItem((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        TotalConsumption {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getTotalConsumption();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setTotalConsumption((Number)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        Unit {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getUnit();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setUnit((String)value);
            }
        }
        ,
        MnjMfgWashRecipeL {
            public Object get(MnjMfgWashRecipeDImpl obj) {
                return obj.getMnjMfgWashRecipeL();
            }

            public void put(MnjMfgWashRecipeDImpl obj, Object value) {
                obj.setMnjMfgWashRecipeL((MnjMfgWashRecipeLImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgWashRecipeDImpl object);

        public abstract void put(MnjMfgWashRecipeDImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int DETAILID = AttributesEnum.DetailId.index();
    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int INVENTORYITEMID = AttributesEnum.InventoryItemId.index();
    public static final int UOM = AttributesEnum.Uom.index();
    public static final int PERBATCHQTY = AttributesEnum.PerBatchQty.index();
    public static final int PERBATCHCONS = AttributesEnum.PerBatchCons.index();
    public static final int DOSAGE = AttributesEnum.Dosage.index();
    public static final int DOSAGEPERC = AttributesEnum.DosagePerc.index();
    public static final int PHVALUE = AttributesEnum.PhValue.index();
    public static final int WATERRATIO = AttributesEnum.WaterRatio.index();
    public static final int PCSPERITEM = AttributesEnum.PcsPerItem.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int TOTALCONSUMPTION = AttributesEnum.TotalConsumption.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int UNIT = AttributesEnum.Unit.index();
    public static final int MNJMFGWASHRECIPEL = AttributesEnum.MnjMfgWashRecipeL.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgWashRecipeDImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgWashRecipeD");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for DetailId, using the alias name DetailId.
     * @return the DetailId
     */
    public Number getDetailId() {
        return (Number)getAttributeInternal(DETAILID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DetailId.
     * @param value value to set the DetailId
     */
    public void setDetailId(Number value) {
        setAttributeInternal(DETAILID, value);
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for InventoryItemId, using the alias name InventoryItemId.
     * @return the InventoryItemId
     */
    public Number getInventoryItemId() {
        return (Number)getAttributeInternal(INVENTORYITEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for InventoryItemId.
     * @param value value to set the InventoryItemId
     */
    public void setInventoryItemId(Number value) {
        setAttributeInternal(INVENTORYITEMID, value);
    }

    /**
     * Gets the attribute value for Uom, using the alias name Uom.
     * @return the Uom
     */
    public String getUom() {
        return (String)getAttributeInternal(UOM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Uom.
     * @param value value to set the Uom
     */
    public void setUom(String value) {
        setAttributeInternal(UOM, value);
    }

    /**
     * Gets the attribute value for PerBatchQty, using the alias name PerBatchQty.
     * @return the PerBatchQty
     */
    public Number getPerBatchQty() {
        return (Number)getAttributeInternal(PERBATCHQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PerBatchQty.
     * @param value value to set the PerBatchQty
     */
    public void setPerBatchQty(Number value) {
        setAttributeInternal(PERBATCHQTY, value);
    }

    /**
     * Gets the attribute value for PerBatchCons, using the alias name PerBatchCons.
     * @return the PerBatchCons
     */
    public Number getPerBatchCons() {
        return (Number)getAttributeInternal(PERBATCHCONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for PerBatchCons.
     * @param value value to set the PerBatchCons
     */
    public void setPerBatchCons(Number value) {
        setAttributeInternal(PERBATCHCONS, value);
    }

    /**
     * Gets the attribute value for Dosage, using the alias name Dosage.
     * @return the Dosage
     */
    public String getDosage() {
        return (String)getAttributeInternal(DOSAGE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Dosage.
     * @param value value to set the Dosage
     */
    public void setDosage(String value) {
        setAttributeInternal(DOSAGE, value);
    }

    /**
     * Gets the attribute value for DosagePerc, using the alias name DosagePerc.
     * @return the DosagePerc
     */
    public Number getDosagePerc() {
        return (Number)getAttributeInternal(DOSAGEPERC);
    }

    /**
     * Sets <code>value</code> as the attribute value for DosagePerc.
     * @param value value to set the DosagePerc
     */
    public void setDosagePerc(Number value) {
        setAttributeInternal(DOSAGEPERC, value);
    }

    /**
     * Gets the attribute value for PhValue, using the alias name PhValue.
     * @return the PhValue
     */
    public String getPhValue() {
        return (String)getAttributeInternal(PHVALUE);
    }

    /**
     * Sets <code>value</code> as the attribute value for PhValue.
     * @param value value to set the PhValue
     */
    public void setPhValue(String value) {
        setAttributeInternal(PHVALUE, value);
    }

    /**
     * Gets the attribute value for WaterRatio, using the alias name WaterRatio.
     * @return the WaterRatio
     */
    public String getWaterRatio() {
        return (String)getAttributeInternal(WATERRATIO);
    }

    /**
     * Sets <code>value</code> as the attribute value for WaterRatio.
     * @param value value to set the WaterRatio
     */
    public void setWaterRatio(String value) {
        setAttributeInternal(WATERRATIO, value);
    }

    /**
     * Gets the attribute value for PcsPerItem, using the alias name PcsPerItem.
     * @return the PcsPerItem
     */
    public Number getPcsPerItem() {
        return (Number)getAttributeInternal(PCSPERITEM);
    }

    /**
     * Sets <code>value</code> as the attribute value for PcsPerItem.
     * @param value value to set the PcsPerItem
     */
    public void setPcsPerItem(Number value) {
        setAttributeInternal(PCSPERITEM, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for TotalConsumption, using the alias name TotalConsumption.
     * @return the TotalConsumption
     */
    public Number getTotalConsumption() {
        return (Number)getAttributeInternal(TOTALCONSUMPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for TotalConsumption.
     * @param value value to set the TotalConsumption
     */
    public void setTotalConsumption(Number value) {
        setAttributeInternal(TOTALCONSUMPTION, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for Unit, using the alias name Unit.
     * @return the Unit
     */
    public String getUnit() {
        return (String)getAttributeInternal(UNIT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Unit.
     * @param value value to set the Unit
     */
    public void setUnit(String value) {
        setAttributeInternal(UNIT, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity MnjMfgWashRecipeLImpl.
     */
    public MnjMfgWashRecipeLImpl getMnjMfgWashRecipeL() {
        return (MnjMfgWashRecipeLImpl)getAttributeInternal(MNJMFGWASHRECIPEL);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgWashRecipeLImpl.
     */
    public void setMnjMfgWashRecipeL(MnjMfgWashRecipeLImpl value) {
        setAttributeInternal(MNJMFGWASHRECIPEL, value);
    }


    /**
     * @param detailId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number detailId) {
        return new Key(new Object[]{detailId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("mnj_mfg_wash_recipe_d_s",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setDetailId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

     /**
          * Custom DML update/insert/delete logic here.
          * @param operation the operation type
          * @param e the transaction event
          */
         protected void doDML(int operation, TransactionEvent e) {
             Map sessionScope = ADFContext.getCurrent().getSessionScope();   
             String user = (String)sessionScope.get("userId");
             String orgId  =(String)sessionScope.get("orgId");
             String unitName  =(String)sessionScope.get("unitName");
             
             System.out.println("ASSES INS DO DML 1 ------------------>"+user);
             System.out.println("ASSES INS DO DML 2------------------>"+orgId);
             System.out.println("ASSES INS DML 3 ------------------>"+unitName);
             
             if(DML_UPDATE == operation){
                       try {
                           
                           setLastUpdateDate((Date)Date.getCurrentDate()); 
                           setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                       } catch (SQLException f) {
                           System.out.println(f.getMessage());
                       }
                   }
                   else if (DML_INSERT == operation){
                    
                       try {
                           
                           //setHeaderNo(getSrNoString());
                           //setOrgId(new oracle.jbo.domain.Number(orgId));
                           //setAttribute1(unitName);
                           setCreationDate((Date)Date.getCurrentDate());  
                           setCreatedBy(new oracle.jbo.domain.Number(user));
                          
                          
                          
                       } catch (SQLException f) {
                           ;
                       }
                   } 
             
             super.doDML(operation, e);
         }
}
