package mnj.mfg.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 13 19:03:38 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgWashRecipeHImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        HeaderId {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        DocNumber {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getDocNumber();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setDocNumber((String)value);
            }
        }
        ,
        DocDate {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getDocDate();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setDocDate((Date)value);
            }
        }
        ,
        SaleOrderId {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getSaleOrderId();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setSaleOrderId((Number)value);
            }
        }
        ,
        SoLineId {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getSoLineId();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setSoLineId((Number)value);
            }
        }
        ,
        CustomerId {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getCustomerId();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setCustomerId((Number)value);
            }
        }
        ,
        Brand {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getBrand();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setBrand((String)value);
            }
        }
        ,
        Qty {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getQty();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setQty((Number)value);
            }
        }
        ,
        RecipeType {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getRecipeType();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setRecipeType((String)value);
            }
        }
        ,
        SampleType {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getSampleType();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setSampleType((String)value);
            }
        }
        ,
        Shade {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getShade();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setShade((String)value);
            }
        }
        ,
        StnNo {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getStnNo();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setStnNo((String)value);
            }
        }
        ,
        OrgId {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getOrgId();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setOrgId((Number)value);
            }
        }
        ,
        NumberBatches {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getNumberBatches();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setNumberBatches((Number)value);
            }
        }
        ,
        PerBatchQuantity {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getPerBatchQuantity();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setPerBatchQuantity((Number)value);
            }
        }
        ,
        Division {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getDivision();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setDivision((String)value);
            }
        }
        ,
        PerBatchWeight {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getPerBatchWeight();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setPerBatchWeight((String)value);
            }
        }
        ,
        WorkableQuantity {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getWorkableQuantity();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setWorkableQuantity((String)value);
            }
        }
        ,
        ExcessCuttingPercent {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getExcessCuttingPercent();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setExcessCuttingPercent((String)value);
            }
        }
        ,
        FebricType {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getFebricType();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setFebricType((String)value);
            }
        }
        ,
        Bp0 {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getBp0();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setBp0((String)value);
            }
        }
        ,
        VersionNo {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getVersionNo();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setVersionNo((Number)value);
            }
        }
        ,
        VersionDate {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getVersionDate();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setVersionDate((Date)value);
            }
        }
        ,
        ActualReceiptQty {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getActualReceiptQty();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setActualReceiptQty((Number)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        UnitName {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getUnitName();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setUnitName((String)value);
            }
        }
        ,
        Comments {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getComments();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setComments((String)value);
            }
        }
        ,
        RecipePreparer {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getRecipePreparer();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setRecipePreparer((String)value);
            }
        }
        ,
        SystemId {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getSystemId();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setSystemId((Number)value);
            }
        }
        ,
        MnjMfgWashRecipeL {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getMnjMfgWashRecipeL();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MnjMfgShadeL {
            public Object get(MnjMfgWashRecipeHImpl obj) {
                return obj.getMnjMfgShadeL();
            }

            public void put(MnjMfgWashRecipeHImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgWashRecipeHImpl object);

        public abstract void put(MnjMfgWashRecipeHImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() +
                AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int DOCNUMBER = AttributesEnum.DocNumber.index();
    public static final int DOCDATE = AttributesEnum.DocDate.index();
    public static final int SALEORDERID = AttributesEnum.SaleOrderId.index();
    public static final int SOLINEID = AttributesEnum.SoLineId.index();
    public static final int CUSTOMERID = AttributesEnum.CustomerId.index();
    public static final int BRAND = AttributesEnum.Brand.index();
    public static final int QTY = AttributesEnum.Qty.index();
    public static final int RECIPETYPE = AttributesEnum.RecipeType.index();
    public static final int SAMPLETYPE = AttributesEnum.SampleType.index();
    public static final int SHADE = AttributesEnum.Shade.index();
    public static final int STNNO = AttributesEnum.StnNo.index();
    public static final int ORGID = AttributesEnum.OrgId.index();
    public static final int NUMBERBATCHES = AttributesEnum.NumberBatches.index();
    public static final int PERBATCHQUANTITY = AttributesEnum.PerBatchQuantity.index();
    public static final int DIVISION = AttributesEnum.Division.index();
    public static final int PERBATCHWEIGHT = AttributesEnum.PerBatchWeight.index();
    public static final int WORKABLEQUANTITY = AttributesEnum.WorkableQuantity.index();
    public static final int EXCESSCUTTINGPERCENT = AttributesEnum.ExcessCuttingPercent.index();
    public static final int FEBRICTYPE = AttributesEnum.FebricType.index();
    public static final int BP0 = AttributesEnum.Bp0.index();
    public static final int VERSIONNO = AttributesEnum.VersionNo.index();
    public static final int VERSIONDATE = AttributesEnum.VersionDate.index();
    public static final int ACTUALRECEIPTQTY = AttributesEnum.ActualReceiptQty.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int UNITNAME = AttributesEnum.UnitName.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int RECIPEPREPARER = AttributesEnum.RecipePreparer.index();
    public static final int SYSTEMID = AttributesEnum.SystemId.index();
    public static final int MNJMFGWASHRECIPEL = AttributesEnum.MnjMfgWashRecipeL.index();
    public static final int MNJMFGSHADEL = AttributesEnum.MnjMfgShadeL.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgWashRecipeHImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgWashRecipeH");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for DocNumber, using the alias name DocNumber.
     * @return the DocNumber
     */
    public String getDocNumber() {
        return (String)getAttributeInternal(DOCNUMBER);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocNumber.
     * @param value value to set the DocNumber
     */
    public void setDocNumber(String value) {
        setAttributeInternal(DOCNUMBER, value);
    }

    /**
     * Gets the attribute value for DocDate, using the alias name DocDate.
     * @return the DocDate
     */
    public Date getDocDate() {
        return (Date)getAttributeInternal(DOCDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for DocDate.
     * @param value value to set the DocDate
     */
    public void setDocDate(Date value) {
        setAttributeInternal(DOCDATE, value);
    }

    /**
     * Gets the attribute value for SaleOrderId, using the alias name SaleOrderId.
     * @return the SaleOrderId
     */
    public Number getSaleOrderId() {
        return (Number)getAttributeInternal(SALEORDERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SaleOrderId.
     * @param value value to set the SaleOrderId
     */
    public void setSaleOrderId(Number value) {
        setAttributeInternal(SALEORDERID, value);
    }

    /**
     * Gets the attribute value for SoLineId, using the alias name SoLineId.
     * @return the SoLineId
     */
    public Number getSoLineId() {
        return (Number)getAttributeInternal(SOLINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SoLineId.
     * @param value value to set the SoLineId
     */
    public void setSoLineId(Number value) {
        setAttributeInternal(SOLINEID, value);
    }


    /**
     * Gets the attribute value for CustomerId, using the alias name CustomerId.
     * @return the CustomerId
     */
    public Number getCustomerId() {
        return (Number)getAttributeInternal(CUSTOMERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for CustomerId.
     * @param value value to set the CustomerId
     */
    public void setCustomerId(Number value) {
        setAttributeInternal(CUSTOMERID, value);
    }

    /**
     * Gets the attribute value for Brand, using the alias name Brand.
     * @return the Brand
     */
    public String getBrand() {
        return (String)getAttributeInternal(BRAND);
    }

    /**
     * Sets <code>value</code> as the attribute value for Brand.
     * @param value value to set the Brand
     */
    public void setBrand(String value) {
        setAttributeInternal(BRAND, value);
    }


    /**
     * Gets the attribute value for Qty, using the alias name Qty.
     * @return the Qty
     */
    public Number getQty() {
        return (Number)getAttributeInternal(QTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Qty.
     * @param value value to set the Qty
     */
    public void setQty(Number value) {
        setAttributeInternal(QTY, value);
    }

    /**
     * Gets the attribute value for RecipeType, using the alias name RecipeType.
     * @return the RecipeType
     */
    public String getRecipeType() {
        return (String)getAttributeInternal(RECIPETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecipeType.
     * @param value value to set the RecipeType
     */
    public void setRecipeType(String value) {
        setAttributeInternal(RECIPETYPE, value);
    }

    /**
     * Gets the attribute value for SampleType, using the alias name SampleType.
     * @return the SampleType
     */
    public String getSampleType() {
        return (String)getAttributeInternal(SAMPLETYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SampleType.
     * @param value value to set the SampleType
     */
    public void setSampleType(String value) {
        setAttributeInternal(SAMPLETYPE, value);
    }

    /**
     * Gets the attribute value for Shade, using the alias name Shade.
     * @return the Shade
     */
    public String getShade() {
        return (String)getAttributeInternal(SHADE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Shade.
     * @param value value to set the Shade
     */
    public void setShade(String value) {
        setAttributeInternal(SHADE, value);
    }

    /**
     * Gets the attribute value for StnNo, using the alias name StnNo.
     * @return the StnNo
     */
    public String getStnNo() {
        return (String)getAttributeInternal(STNNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for StnNo.
     * @param value value to set the StnNo
     */
    public void setStnNo(String value) {
        setAttributeInternal(STNNO, value);
    }

    /**
     * Gets the attribute value for OrgId, using the alias name OrgId.
     * @return the OrgId
     */
    public Number getOrgId() {
        return (Number)getAttributeInternal(ORGID);
    }

    /**
     * Sets <code>value</code> as the attribute value for OrgId.
     * @param value value to set the OrgId
     */
    public void setOrgId(Number value) {
        setAttributeInternal(ORGID, value);
    }

    /**
     * Gets the attribute value for NumberBatches, using the alias name NumberBatches.
     * @return the NumberBatches
     */
    public Number getNumberBatches() {
        return (Number)getAttributeInternal(NUMBERBATCHES);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberBatches.
     * @param value value to set the NumberBatches
     */
    public void setNumberBatches(Number value) {
        setAttributeInternal(NUMBERBATCHES, value);
    }

    /**
     * Gets the attribute value for PerBatchQuantity, using the alias name PerBatchQuantity.
     * @return the PerBatchQuantity
     */
    public Number getPerBatchQuantity() {
        return (Number)getAttributeInternal(PERBATCHQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PerBatchQuantity.
     * @param value value to set the PerBatchQuantity
     */
    public void setPerBatchQuantity(Number value) {
        setAttributeInternal(PERBATCHQUANTITY, value);
    }

    /**
     * Gets the attribute value for Division, using the alias name Division.
     * @return the Division
     */
    public String getDivision() {
        return (String)getAttributeInternal(DIVISION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Division.
     * @param value value to set the Division
     */
    public void setDivision(String value) {
        setAttributeInternal(DIVISION, value);
    }

    /**
     * Gets the attribute value for PerBatchWeight, using the alias name PerBatchWeight.
     * @return the PerBatchWeight
     */
    public String getPerBatchWeight() {
        return (String)getAttributeInternal(PERBATCHWEIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for PerBatchWeight.
     * @param value value to set the PerBatchWeight
     */
    public void setPerBatchWeight(String value) {
        setAttributeInternal(PERBATCHWEIGHT, value);
    }

    /**
     * Gets the attribute value for WorkableQuantity, using the alias name WorkableQuantity.
     * @return the WorkableQuantity
     */
    public String getWorkableQuantity() {
        return (String)getAttributeInternal(WORKABLEQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for WorkableQuantity.
     * @param value value to set the WorkableQuantity
     */
    public void setWorkableQuantity(String value) {
        setAttributeInternal(WORKABLEQUANTITY, value);
    }

    /**
     * Gets the attribute value for ExcessCuttingPercent, using the alias name ExcessCuttingPercent.
     * @return the ExcessCuttingPercent
     */
    public String getExcessCuttingPercent() {
        return (String)getAttributeInternal(EXCESSCUTTINGPERCENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for ExcessCuttingPercent.
     * @param value value to set the ExcessCuttingPercent
     */
    public void setExcessCuttingPercent(String value) {
        setAttributeInternal(EXCESSCUTTINGPERCENT, value);
    }


    /**
     * Gets the attribute value for FebricType, using the alias name FebricType.
     * @return the FebricType
     */
    public String getFebricType() {
        return (String)getAttributeInternal(FEBRICTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FebricType.
     * @param value value to set the FebricType
     */
    public void setFebricType(String value) {
        setAttributeInternal(FEBRICTYPE, value);
    }

    /**
     * Gets the attribute value for Bp0, using the alias name Bp0.
     * @return the Bp0
     */
    public String getBp0() {
        return (String)getAttributeInternal(BP0);
    }

    /**
     * Sets <code>value</code> as the attribute value for Bp0.
     * @param value value to set the Bp0
     */
    public void setBp0(String value) {
        setAttributeInternal(BP0, value);
    }

    /**
     * Gets the attribute value for VersionNo, using the alias name VersionNo.
     * @return the VersionNo
     */
    public Number getVersionNo() {
        return (Number)getAttributeInternal(VERSIONNO);
    }

    /**
     * Sets <code>value</code> as the attribute value for VersionNo.
     * @param value value to set the VersionNo
     */
    public void setVersionNo(Number value) {
        setAttributeInternal(VERSIONNO, value);
    }

    /**
     * Gets the attribute value for VersionDate, using the alias name VersionDate.
     * @return the VersionDate
     */
    public Date getVersionDate() {
        return (Date)getAttributeInternal(VERSIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VersionDate.
     * @param value value to set the VersionDate
     */
    public void setVersionDate(Date value) {
        setAttributeInternal(VERSIONDATE, value);
    }

    /**
     * Gets the attribute value for ActualReceiptQty, using the alias name ActualReceiptQty.
     * @return the ActualReceiptQty
     */
    public Number getActualReceiptQty() {
        return (Number)getAttributeInternal(ACTUALRECEIPTQTY);
    }

    /**
     * Sets <code>value</code> as the attribute value for ActualReceiptQty.
     * @param value value to set the ActualReceiptQty
     */
    public void setActualReceiptQty(Number value) {
        setAttributeInternal(ACTUALRECEIPTQTY, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for UnitName, using the alias name UnitName.
     * @return the UnitName
     */
    public String getUnitName() {
        return (String)getAttributeInternal(UNITNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for UnitName.
     * @param value value to set the UnitName
     */
    public void setUnitName(String value) {
        setAttributeInternal(UNITNAME, value);
    }

    /**
     * Gets the attribute value for Comments, using the alias name Comments.
     * @return the Comments
     */
    public String getComments() {
        return (String)getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Comments.
     * @param value value to set the Comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the attribute value for RecipePreparer, using the alias name RecipePreparer.
     * @return the RecipePreparer
     */
    public String getRecipePreparer() {
        return (String)getAttributeInternal(RECIPEPREPARER);
    }

    /**
     * Sets <code>value</code> as the attribute value for RecipePreparer.
     * @param value value to set the RecipePreparer
     */
    public void setRecipePreparer(String value) {
        setAttributeInternal(RECIPEPREPARER, value);
    }

    /**
     * Gets the attribute value for SystemId, using the alias name SystemId.
     * @return the SystemId
     */
    public Number getSystemId() {
        return (Number)getAttributeInternal(SYSTEMID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SystemId.
     * @param value value to set the SystemId
     */
    public void setSystemId(Number value) {
        setAttributeInternal(SYSTEMID, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgWashRecipeL() {
        return (RowIterator)getAttributeInternal(MNJMFGWASHRECIPEL);
    }


    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgShadeL() {
        return (RowIterator)getAttributeInternal(MNJMFGSHADEL);
    }


    /**
     * @param headerId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number headerId) {
        return new Key(new Object[]{headerId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =
            new oracle.jbo.server.SequenceImpl("mnj_mfg_wash_recipe_h_s",
                                               getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setHeaderId(sVal);
        // setDocNumber(String.valueOf(getSrNoString()));
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {

        System.out.println("In doDML");

        Map sessionScope = ADFContext.getCurrent().getSessionScope();

        String user = (String)sessionScope.get("userId");
        String orgId = (String)sessionScope.get("orgId");
        String unitName = (String)sessionScope.get("unitName");
        String userName = (String)sessionScope.get("userName");

        System.out.println("Session Parameters are... " + user + " " + orgId +
                           " " + unitName + " " + userName);

        if (operation == DML_INSERT) {
            System.out.println("In Insert");
            try {
                setOrgId(new oracle.jbo.domain.Number(orgId));
                setUnitName(unitName);
                setDocNumber(String.valueOf(getSrNoString()));
                System.out.println("Document No -->" + getSrNoString());
                setCreationDate((Date)Date.getCurrentDate());
                setCreatedBy(new oracle.jbo.domain.Number(user));
                setRecipePreparer(userName);


            } catch (SQLException f) {
                ;
            }
        } else if (DML_UPDATE == operation) {
            System.out.println("In Update");
            try {
                setLastUpdateDate((Date)Date.getCurrentDate());
                setLastUpdatedBy(new oracle.jbo.domain.Number(user));
            } catch (SQLException f) {
                ;
            }
        }

        super.doDML(operation, e);
    }

    public int getSrNoString() {
        int srno = 0;
        String stmt = "BEGIN :1 := cust_mnj_mfg_pkg.recipe_doc; end;";
        java.sql.CallableStatement cs =
            getDBTransaction().createCallableStatement(stmt, 1);
        try {
            cs.registerOutParameter(1, oracle.jdbc.OracleTypes.VARCHAR);
            cs.execute();
            srno = cs.getInt(1);
            cs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
        return srno;
    }

}
