package mnj.mfg.model.entities;

import java.sql.SQLException;

import java.util.Map;

import oracle.adf.share.ADFContext;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Aug 13 19:05:44 BDT 2015
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MnjMfgWashRecipeLImpl extends EntityImpl {
    private static EntityDefImpl mDefinitionObject;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        LineId {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getLineId();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setLineId((Number)value);
            }
        }
        ,
        HeaderId {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getHeaderId();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setHeaderId((Number)value);
            }
        }
        ,
        MinorOperations {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getMinorOperations();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setMinorOperations((String)value);
            }
        }
        ,
        MajorOperations {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getMajorOperations();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setMajorOperations((String)value);
            }
        }
        ,
        MajorOpId {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getMajorOpId();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setMajorOpId((Number)value);
            }
        }
        ,
        Smv {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getSmv();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setSmv((Number)value);
            }
        }
        ,
        Temperature {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getTemperature();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setTemperature((String)value);
            }
        }
        ,
        Water {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getWater();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setWater((String)value);
            }
        }
        ,
        MinTime {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getMinTime();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setMinTime((Number)value);
            }
        }
        ,
        Seq {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getSeq();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setSeq((Number)value);
            }
        }
        ,
        Intensity {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getIntensity();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setIntensity((String)value);
            }
        }
        ,
        WashType {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getWashType();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setWashType((String)value);
            }
        }
        ,
        Remarks {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getRemarks();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setRemarks((String)value);
            }
        }
        ,
        PerBatchQuantity {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getPerBatchQuantity();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setPerBatchQuantity((Number)value);
            }
        }
        ,
        NumberBatches {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getNumberBatches();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setNumberBatches((Number)value);
            }
        }
        ,
        Comments {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getComments();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setComments((String)value);
            }
        }
        ,
        CreatedBy {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getCreatedBy();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setCreatedBy((Number)value);
            }
        }
        ,
        CreationDate {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getCreationDate();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setCreationDate((Date)value);
            }
        }
        ,
        LastUpdatedBy {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getLastUpdatedBy();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setLastUpdatedBy((Number)value);
            }
        }
        ,
        LastUpdateDate {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getLastUpdateDate();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setLastUpdateDate((Date)value);
            }
        }
        ,
        MnjMfgWashRecipeD {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getMnjMfgWashRecipeD();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ,
        MnjMfgWashRecipeH {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getMnjMfgWashRecipeH();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setMnjMfgWashRecipeH((MnjMfgWashRecipeHImpl)value);
            }
        }
        ,
        MnjMfgSubProcessEO {
            public Object get(MnjMfgWashRecipeLImpl obj) {
                return obj.getMnjMfgSubProcessEO();
            }

            public void put(MnjMfgWashRecipeLImpl obj, Object value) {
                obj.setAttributeInternal(index(), value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(MnjMfgWashRecipeLImpl object);

        public abstract void put(MnjMfgWashRecipeLImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int LINEID = AttributesEnum.LineId.index();
    public static final int HEADERID = AttributesEnum.HeaderId.index();
    public static final int MINOROPERATIONS = AttributesEnum.MinorOperations.index();
    public static final int MAJOROPERATIONS = AttributesEnum.MajorOperations.index();
    public static final int MAJOROPID = AttributesEnum.MajorOpId.index();
    public static final int SMV = AttributesEnum.Smv.index();
    public static final int TEMPERATURE = AttributesEnum.Temperature.index();
    public static final int WATER = AttributesEnum.Water.index();
    public static final int MINTIME = AttributesEnum.MinTime.index();
    public static final int SEQ = AttributesEnum.Seq.index();
    public static final int INTENSITY = AttributesEnum.Intensity.index();
    public static final int WASHTYPE = AttributesEnum.WashType.index();
    public static final int REMARKS = AttributesEnum.Remarks.index();
    public static final int PERBATCHQUANTITY = AttributesEnum.PerBatchQuantity.index();
    public static final int NUMBERBATCHES = AttributesEnum.NumberBatches.index();
    public static final int COMMENTS = AttributesEnum.Comments.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATIONDATE = AttributesEnum.CreationDate.index();
    public static final int LASTUPDATEDBY = AttributesEnum.LastUpdatedBy.index();
    public static final int LASTUPDATEDATE = AttributesEnum.LastUpdateDate.index();
    public static final int MNJMFGWASHRECIPED = AttributesEnum.MnjMfgWashRecipeD.index();
    public static final int MNJMFGWASHRECIPEH = AttributesEnum.MnjMfgWashRecipeH.index();
    public static final int MNJMFGSUBPROCESSEO = AttributesEnum.MnjMfgSubProcessEO.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MnjMfgWashRecipeLImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = EntityDefImpl.findDefObject("mnj.mfg.model.entities.MnjMfgWashRecipeL");
        }
        return mDefinitionObject;
    }

    /**
     * Gets the attribute value for LineId, using the alias name LineId.
     * @return the LineId
     */
    public Number getLineId() {
        return (Number)getAttributeInternal(LINEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for LineId.
     * @param value value to set the LineId
     */
    public void setLineId(Number value) {
        setAttributeInternal(LINEID, value);
    }

    /**
     * Gets the attribute value for HeaderId, using the alias name HeaderId.
     * @return the HeaderId
     */
    public Number getHeaderId() {
        return (Number)getAttributeInternal(HEADERID);
    }

    /**
     * Sets <code>value</code> as the attribute value for HeaderId.
     * @param value value to set the HeaderId
     */
    public void setHeaderId(Number value) {
        setAttributeInternal(HEADERID, value);
    }

    /**
     * Gets the attribute value for MinorOperations, using the alias name MinorOperations.
     * @return the MinorOperations
     */
    public String getMinorOperations() {
        return (String)getAttributeInternal(MINOROPERATIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinorOperations.
     * @param value value to set the MinorOperations
     */
    public void setMinorOperations(String value) {
        setAttributeInternal(MINOROPERATIONS, value);
    }

    /**
     * Gets the attribute value for MajorOperations, using the alias name MajorOperations.
     * @return the MajorOperations
     */
    public String getMajorOperations() {
        return (String)getAttributeInternal(MAJOROPERATIONS);
    }

    /**
     * Sets <code>value</code> as the attribute value for MajorOperations.
     * @param value value to set the MajorOperations
     */
    public void setMajorOperations(String value) {
        setAttributeInternal(MAJOROPERATIONS, value);
    }

    /**
     * Gets the attribute value for MajorOpId, using the alias name MajorOpId.
     * @return the MajorOpId
     */
    public Number getMajorOpId() {
        return (Number)getAttributeInternal(MAJOROPID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MajorOpId.
     * @param value value to set the MajorOpId
     */
    public void setMajorOpId(Number value) {
        setAttributeInternal(MAJOROPID, value);
    }

    /**
     * Gets the attribute value for Smv, using the alias name Smv.
     * @return the Smv
     */
    public Number getSmv() {
        return (Number)getAttributeInternal(SMV);
    }

    /**
     * Sets <code>value</code> as the attribute value for Smv.
     * @param value value to set the Smv
     */
    public void setSmv(Number value) {
        setAttributeInternal(SMV, value);
    }

    /**
     * Gets the attribute value for Temperature, using the alias name Temperature.
     * @return the Temperature
     */
    public String getTemperature() {
        return (String)getAttributeInternal(TEMPERATURE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Temperature.
     * @param value value to set the Temperature
     */
    public void setTemperature(String value) {
        setAttributeInternal(TEMPERATURE, value);
    }

    /**
     * Gets the attribute value for Water, using the alias name Water.
     * @return the Water
     */
    public String getWater() {
        return (String)getAttributeInternal(WATER);
    }

    /**
     * Sets <code>value</code> as the attribute value for Water.
     * @param value value to set the Water
     */
    public void setWater(String value) {
        setAttributeInternal(WATER, value);
    }

    /**
     * Gets the attribute value for MinTime, using the alias name MinTime.
     * @return the MinTime
     */
    public Number getMinTime() {
        return (Number)getAttributeInternal(MINTIME);
    }

    /**
     * Sets <code>value</code> as the attribute value for MinTime.
     * @param value value to set the MinTime
     */
    public void setMinTime(Number value) {
        setAttributeInternal(MINTIME, value);
    }

    /**
     * Gets the attribute value for Seq, using the alias name Seq.
     * @return the Seq
     */
    public Number getSeq() {
        return (Number)getAttributeInternal(SEQ);
    }

    /**
     * Sets <code>value</code> as the attribute value for Seq.
     * @param value value to set the Seq
     */
    public void setSeq(Number value) {
        setAttributeInternal(SEQ, value);
    }

    /**
     * Gets the attribute value for Intensity, using the alias name Intensity.
     * @return the Intensity
     */
    public String getIntensity() {
        return (String)getAttributeInternal(INTENSITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Intensity.
     * @param value value to set the Intensity
     */
    public void setIntensity(String value) {
        setAttributeInternal(INTENSITY, value);
    }

    /**
     * Gets the attribute value for WashType, using the alias name WashType.
     * @return the WashType
     */
    public String getWashType() {
        return (String)getAttributeInternal(WASHTYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for WashType.
     * @param value value to set the WashType
     */
    public void setWashType(String value) {
        setAttributeInternal(WASHTYPE, value);
    }

    /**
     * Gets the attribute value for Remarks, using the alias name Remarks.
     * @return the Remarks
     */
    public String getRemarks() {
        return (String)getAttributeInternal(REMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Remarks.
     * @param value value to set the Remarks
     */
    public void setRemarks(String value) {
        setAttributeInternal(REMARKS, value);
    }

    /**
     * Gets the attribute value for PerBatchQuantity, using the alias name PerBatchQuantity.
     * @return the PerBatchQuantity
     */
    public Number getPerBatchQuantity() {
        return (Number)getAttributeInternal(PERBATCHQUANTITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for PerBatchQuantity.
     * @param value value to set the PerBatchQuantity
     */
    public void setPerBatchQuantity(Number value) {
        setAttributeInternal(PERBATCHQUANTITY, value);
    }

    /**
     * Gets the attribute value for NumberBatches, using the alias name NumberBatches.
     * @return the NumberBatches
     */
    public Number getNumberBatches() {
        return (Number)getAttributeInternal(NUMBERBATCHES);
    }

    /**
     * Sets <code>value</code> as the attribute value for NumberBatches.
     * @param value value to set the NumberBatches
     */
    public void setNumberBatches(Number value) {
        setAttributeInternal(NUMBERBATCHES, value);
    }

    /**
     * Gets the attribute value for Comments, using the alias name Comments.
     * @return the Comments
     */
    public String getComments() {
        return (String)getAttributeInternal(COMMENTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Comments.
     * @param value value to set the Comments
     */
    public void setComments(String value) {
        setAttributeInternal(COMMENTS, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreationDate, using the alias name CreationDate.
     * @return the CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreationDate.
     * @param value value to set the CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**
     * Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy.
     * @return the LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdatedBy.
     * @param value value to set the LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate.
     * @return the LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for LastUpdateDate.
     * @param value value to set the LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index,
                                           AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value,
                                         AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgWashRecipeD() {
        return (RowIterator)getAttributeInternal(MNJMFGWASHRECIPED);
    }

    /**
     * @return the associated entity MnjMfgWashRecipeHImpl.
     */
    public MnjMfgWashRecipeHImpl getMnjMfgWashRecipeH() {
        return (MnjMfgWashRecipeHImpl)getAttributeInternal(MNJMFGWASHRECIPEH);
    }

    /**
     * Sets <code>value</code> as the associated entity MnjMfgWashRecipeHImpl.
     */
    public void setMnjMfgWashRecipeH(MnjMfgWashRecipeHImpl value) {
        setAttributeInternal(MNJMFGWASHRECIPEH, value);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getMnjMfgSubProcessEO() {
        return (RowIterator)getAttributeInternal(MNJMFGSUBPROCESSEO);
    }


    /**
     * @param lineId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number lineId) {
        return new Key(new Object[]{lineId});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        oracle.jbo.server.SequenceImpl s =new oracle.jbo.server.SequenceImpl("mnj_mfg_wash_recipe_l_s",getDBTransaction());
        oracle.jbo.domain.Number sVal = s.getSequenceNumber();
        setLineId(sVal);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
         * Custom DML update/insert/delete logic here.
         * @param operation the operation type
         * @param e the transaction event
         */
        protected void doDML(int operation, TransactionEvent e) {
            Map sessionScope = ADFContext.getCurrent().getSessionScope();   
            String user = (String)sessionScope.get("userId");
            String orgId  =(String)sessionScope.get("orgId");
            String unitName  =(String)sessionScope.get("unitName");
            
            System.out.println("ASSES INS DO DML 1 ------------------>"+user);
            System.out.println("ASSES INS DO DML 2------------------>"+orgId);
            System.out.println("ASSES INS DML 3 ------------------>"+unitName);
            
            if(DML_UPDATE == operation){
                      try {
                          
                          setLastUpdateDate((Date)Date.getCurrentDate()); 
                          setLastUpdatedBy(new oracle.jbo.domain.Number(user));
                      } catch (SQLException f) {
                          System.out.println(f.getMessage());
                      }
                  }
                  else if (DML_INSERT == operation){
                   
                      try {
                          
                          //setHeaderNo(getSrNoString());
                          //setOrgId(new oracle.jbo.domain.Number(orgId));
                          //setAttribute1(unitName);
                          setCreationDate((Date)Date.getCurrentDate());  
                          setCreatedBy(new oracle.jbo.domain.Number(user));
                         
                         
                         
                      } catch (SQLException f) {
                          ;
                      }
                  } 
            
            super.doDML(operation, e);
        }
}
